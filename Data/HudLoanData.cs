using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EncompassREST.Data
{
    public class HudLoanData
    {
        public string dealerContractorName { get; set; }
        public DateTime? purchaseDate { get; set; }
        public bool? haveOtherPendingApplicationForFHA { get; set; }
        public string dealerContractorAddress { get; set; }
        public string dealerContractorCity { get; set; }
        public string dealerContractorState { get; set; }
        public string dealerContractorPostalCode { get; set; }
        public bool? refinancingATitleILoan { get; set; }
        public string title1LoanNumber { get; set; }
        public decimal? title1LoanBalance { get; set; }
        public string nonresidentialTypeOfUse { get; set; }
        public int? numberOfHistoricUnits { get; set; }
        public bool? ownedByBorrower { get; set; }
        public bool? leasedFromSomeoneElse { get; set; }
        public bool? purchasedOnContract { get; set; }
        public bool? mtgOrDeedOfTrusOnProperty { get; set; }
        public string propertyOwnerName { get; set; }
        public string propertyOwnerAddress { get; set; }
        public string propertyOwnerCity { get; set; }
        public string propertyOwnerState { get; set; }
        public string propertyOwnerPostalCode { get; set; }
        public decimal? leaseMonthlyPayment { get; set; }
        public DateTime? leaseExpiradionDate { get; set; }
        public bool? newResidential { get; set; }
        public string title1LoanWithWhom { get; set; }
        public string propertyToBeImproved { get; set; }
        public int? numberOfMultifamilyUnits { get; set; }
        public bool? hUDOwned { get; set; }
        public decimal? contingencyReserveCostsAmount { get; set; }
        public int? inspectionFeeTimes { get; set; }
        public decimal? inspectionFeeAmount { get; set; }
        public int? titleUpdateFeeTimes { get; set; }
        public decimal? titleUpdateFeeAmount { get; set; }
        public decimal? totalForInspectionAndTitleFee { get; set; }
        public int? mtgPaymentEscrowedTimes { get; set; }
        public decimal? totalForMtgPaymentEscrowed { get; set; }
        public decimal? subTotalForEscrowAccount { get; set; }
        public decimal? architecturalEngineeringFee { get; set; }
        public string commitmentStage { get; set; }
        public decimal? independentConsultantFee { get; set; }
        public decimal? permitsAndOtherFee { get; set; }
        public int? planReviewerFeeMiles { get; set; }
        public decimal? planReviewerFeeAmount { get; set; }
        public decimal? totalForPlanReviewerFee { get; set; }
        public decimal? fHA203kB10SubTotal { get; set; }
        public decimal? discountPointsPercent { get; set; }
        public decimal? discountPointsAmount { get; set; }
        public decimal? subTotalForReleaseAtClosing { get; set; }
        public decimal? totalForRehabilitationCost { get; set; }
        public string escrowCommitment { get; set; }
        public decimal? lesserOfSalesPrice { get; set; }
        public decimal? borrowerEstimatedProfit2 { get; set; }
        public decimal? lesserOfSumPercent { get; set; }
        public decimal? lesserOfSumAmount { get; set; }
        public decimal? statutoryInvestment { get; set; }
        public decimal? purchaseMaximumMortgagePercent { get; set; }
        public decimal? lessAllowableDownpayment { get; set; }
        public decimal? purchaseMaximumMortgageAmount { get; set; }
        public decimal? actualCashInvRequired { get; set; }
        public decimal? adjustedMaxMtgAmount { get; set; }
        public decimal? contractSalesPrice { get; set; }
        public decimal? sumOfExistingDebt { get; set; }
        public decimal? lesserOfSumAsIs { get; set; }
        public decimal? totalForLesserOfSumAsIs { get; set; }
        public decimal? suplementalOriginationFee { get; set; }
        public decimal? sumForInvestor { get; set; }
        public decimal? sumForOwnerOccupied { get; set; }
        public decimal? refinanceMaximumMortgageAmount { get; set; }
        public decimal? borrowerRequiredInvestment { get; set; }
        public decimal? commitmentMaximumMortgageAmount { get; set; }
        public decimal? asIsValue { get; set; }
        public decimal? valueEstablished { get; set; }
        public decimal? totalEscrowCommitment { get; set; }
        public decimal? totalForBorrowerEstimatedProfit { get; set; }
        public string fHA203kRemarks { get; set; }
        public decimal? borrowerPaidClosingCosts { get; set; }
        public decimal? afterImprovedValue { get; set; }
        public decimal? totalRehabilitationCosts { get; set; }
        public decimal? mtgPaymentEscrowedAmount { get; set; }
        public decimal? energyEfficientMortgageAmount { get; set; }
        public decimal? totalEscrowedFunds { get; set; }
        public string residencyType { get; set; }
        public decimal? percentAfterImprovedValue { get; set; }
        public decimal? totalCostsOfRepairsInA6 { get; set; }
        public string borrowerAcknowledgement { get; set; }
        public string otherDescription { get; set; }
        public bool? existingDebt { get; set; }
        public decimal? borrowerEstimatedProfit1 { get; set; }
        public decimal? planReviewerFeeAddition { get; set; }
        public bool? streamlined { get; set; }
        public decimal? maximumMortgageWithUFMIP { get; set; }
        public decimal? allowableEnergyImprovements { get; set; }
        public decimal? contingencyReserveCostsPercent { get; set; }
        public decimal? constructionRepairsRehabilitationCosts { get; set; }
        public decimal? feasibilityStudyWhenNecessary { get; set; }
        public decimal? financeableMortgageFeesIfCharged { get; set; }
        public decimal? totalRehabilitationCostsFeesReserves { get; set; }
        public decimal? purchasePriceLessInducementToPurchase { get; set; }
        public decimal? step2EPlusStep1E { get; set; }
        public decimal? lesserOf3AOr3B { get; set; }
        public decimal? appropriateLTVFactor { get; set; }
        public decimal? lesserOf3AOr3BMultiply3F { get; set; }
        public decimal? nationwideMortgageLimit { get; set; }
        public decimal? baseMortgageAmountFrom3COr3D { get; set; }
        public decimal? materialCostsOrderedPrepaidByBorrowerContractor { get; set; }
        public decimal? materialCostsOrderedPrepaidByBorrowerContractorAfter50Percent { get; set; }
        public decimal? initialDrawAtClosingTotal { get; set; }
        public decimal? borrowersOwnFundsforContingencyReserves { get; set; }
        public decimal? initialBaseMortgageAmountPlusEEMImprovementAmount { get; set; }
        public decimal? windEnergySystemActualCost { get; set; }
        public decimal? afterImprovedValueAfter20Percent { get; set; }
        public decimal? lesserOfMaximumFinanceableSolarOrWindEnergyAmount { get; set; }
        public decimal? nationwideMortgageLimitAfter120Percent { get; set; }
        public decimal? finalBaseMortgageAmount { get; set; }
        public decimal? rehabilitationEscrowAccount { get; set; }
        public decimal? mIPLTV { get; set; }
        public decimal? feesAssociatedWithNewLoan { get; set; }
        public decimal? existingDebtPlusRehabCosts { get; set; }
        public decimal? existingDebtPlusRehabCostsPlusNewLoanFees { get; set; }
        public decimal? inspectionFeesDuringRehabilitation { get; set; }
        public decimal? titleUpdateFees { get; set; }
        public decimal? rehabilitationEscrowAmountBalanceForFutureDraws { get; set; }
        public bool? limitedProgram { get; set; }
        public string criteriaForAppropriateLTVFactor { get; set; }
        public string propertyType { get; set; }
        public bool? eEMIndicator { get; set; }
        public bool? buildingOnOwnLand { get; set; }
        public bool? hUDREOIndicator { get; set; }
        public bool? loanFor203KIndicator { get; set; }
        public string fHAStreamlineType { get; set; }
        public List<SecondaryFinancingProvider> secondaryFinancingProviders { get; set; }
        public decimal? childSupportBalance { get; set; }
        public decimal? rentalCashFlowBalance { get; set; }
        public decimal? totalFixedUnpaidBalance { get; set; }
        public bool? lDPGSAForBorrower { get; set; }
        public bool? lDPGSAForCoBorrower { get; set; }
        public bool? scoredByTotal { get; set; }
        public string riskClass { get; set; }
        public string cHUMSForAppraisal { get; set; }
        public string loanPurpose { get; set; }
        public DateTime? caseAssignedDate { get; set; }
        public decimal? sellerContributionRate { get; set; }
        public bool? simpleRefinance { get; set; }
        public string id { get; set; }

    }
}
