
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EncompassREST.Data
{
    public class StateDisclosure
    {
        public bool? attorneyForTheSellerIndicator { get; set; }
        public bool? attorneyForTheBuyerIndicator { get; set; }
        public bool? attorneyForTheLenderIndicator { get; set; }
        public string commitmentCondition1 { get; set; }
        public string commitmentCondition2 { get; set; }
        public string advisoryCondition1 { get; set; }
        public string advisoryCondition2 { get; set; }
        public string advisoryCondition3 { get; set; }
        public string advisoryCondition4 { get; set; }
        public bool? lenderPayIndicator { get; set; }
        public decimal? lenderPayPercent { get; set; }
        public decimal? lenderPayAmount { get; set; }
        public decimal? lenderPayPoint { get; set; }
        public decimal? lenderPayMaxPoint { get; set; }
        public bool? brokerPayIndicator { get; set; }
        public decimal? brokerPayPercent { get; set; }
        public decimal? brokerPayAmount { get; set; }
        public bool? directPayIndicator { get; set; }
        public decimal? directPayCommitment { get; set; }
        public decimal? directPayClosing { get; set; }
        public decimal? directPayPercent { get; set; }
        public decimal? directPayAmount { get; set; }
        public decimal? newYorkApplicationFee { get; set; }
        public decimal? newYorkAppraisalFee { get; set; }
        public decimal? newYorkCreditReportFee { get; set; }
        public string refundCondition1 { get; set; }
        public string refundCondition2 { get; set; }
        public decimal? newYorkProcessingFee { get; set; }
        public string questionContact { get; set; }
        public string questionContactPhone { get; set; }
        public string questionContactTollFree { get; set; }
        public List<NewYorkPrimaryLender> newYorkPrimaryLenders { get; set; }
        public string receivedBy { get; set; }
        public decimal? feeReceived1 { get; set; }
        public decimal? gFEFeeReceived1 { get; set; }
        public decimal? feeReceived2 { get; set; }
        public decimal? gFEFeeReceived2 { get; set; }
        public string lenderName { get; set; }
        public string lenderStatus { get; set; }
        public DateTime? lenderDate { get; set; }
        public decimal? paidByLender { get; set; }
        public decimal? paidByBorrower { get; set; }
        public string paidByOtherDescription1 { get; set; }
        public decimal? paidByOther1 { get; set; }
        public string paidByOtherDescription2 { get; set; }
        public decimal? paidByOther2 { get; set; }
        public decimal? totalFee { get; set; }
        public string refundCondition3 { get; set; }
        public string refundCondition4 { get; set; }
        public string refundCondition5 { get; set; }
        public string refundCondition6 { get; set; }
        public string indexUsed { get; set; }
        public string informationAboutTheIndexCanBeFound { get; set; }
        public string checkPayableTo { get; set; }
        public string nameOfLicensee { get; set; }
        public DateTime? applicationDate { get; set; }
        public decimal? brokerageFeePercent1 { get; set; }
        public decimal? brokerageFeeAddition1 { get; set; }
        public decimal? brokerageFeePercent2 { get; set; }
        public decimal? brokerageFeeAddition2 { get; set; }
        public decimal? brokerageFeePercent3 { get; set; }
        public decimal? brokerageFeeAddition3 { get; set; }
        public decimal? floridaApplicationFee { get; set; }
        public string refundableType { get; set; }
        public decimal? appraisalDeposit { get; set; }
        public decimal? creditDeposit { get; set; }
        public string brokerName { get; set; }
        public string brokerLicense { get; set; }
        public bool? submitToLenderIndicator { get; set; }
        public bool? independentContractorIndicator { get; set; }
        public bool? actingOthersIndicator { get; set; }
        public string actingOtherDescription1 { get; set; }
        public string actingOtherDescription2 { get; set; }
        public bool? offerRetailPriceIndicator { get; set; }
        public bool? basedOnWholesaleOptionsIndicator { get; set; }
        public decimal? feesReceiving { get; set; }
        public decimal? texasApplicationFee { get; set; }
        public decimal? texasProcessingFee { get; set; }
        public string appraisalContact { get; set; }
        public decimal? texasAppraisalFee { get; set; }
        public string creditReportContact { get; set; }
        public decimal? texasCreditReportFee { get; set; }
        public string underwritingContact { get; set; }
        public decimal? underwritingFee { get; set; }
        public string texasOtherFeeContact1 { get; set; }
        public decimal? texasOtherFee1 { get; set; }
        public string texasOtherFeeContact2 { get; set; }
        public decimal? texasOtherFee2 { get; set; }
        public decimal? notRefundableAmount { get; set; }
        public bool? asRealBrokerIndicator { get; set; }
        public string brokerForTheSeller { get; set; }
        public bool? lenderPayUnknownIndicator { get; set; }
        public decimal? brokerPayAddition { get; set; }
        public decimal? newMoneyAmount { get; set; }
        public decimal? previousMortgageAmountOne { get; set; }
        public decimal? previousMortgageAmountTwo { get; set; }
        public string typeOfProperty { get; set; }
        public string inLicensedNo { get; set; }
        public string inLicensedType { get; set; }
        public string regulatorAddress { get; set; }
        public string regulatorCity { get; set; }
        public string regulatorState { get; set; }
        public string regulatorZipCode { get; set; }
        public string regulatorPhone { get; set; }
        public string regulatorTollFreePhone { get; set; }
        public string regulatorMailingAddress { get; set; }
        public string regulatorMailingCity { get; set; }
        public string regulatorMailingState { get; set; }
        public string regulatorMailingZipCode { get; set; }
        public bool? asAttorneyIndicator { get; set; }
        public bool? mortgageAgreementIndicator { get; set; }
        public bool? cHARMBookletIndicator { get; set; }
        public bool? specificARMIndicator { get; set; }
        public bool? hUDBookletIndicator { get; set; }
        public bool? signedByBorrowerIndicator { get; set; }
        public decimal? lenderPaid { get; set; }
        public decimal? brokerageFeeAmount1 { get; set; }
        public decimal? brokerageFeeAmount2 { get; set; }
        public decimal? brokerageFeeAmount3 { get; set; }
        public int? brokerageFeeDays { get; set; }
        public decimal? compensationPercent { get; set; }
        public decimal? compensationAddition { get; set; }
        public decimal? depositReceipt { get; set; }
        public decimal? thirdPartyFee { get; set; }
        public bool? depositRefundableIndicator { get; set; }
        public string refundableBy { get; set; }
        public string mtgBrokerLicense { get; set; }
        public string providedBy { get; set; }
        public string directContact { get; set; }
        public string feeReceivedByLender { get; set; }
        public DateTime? expirationDate { get; set; }
        public bool? acceptedByBorrowerIndicator { get; set; }
        public DateTime? acceptedDate { get; set; }
        public bool? isEstimateIndicator { get; set; }
        public decimal? lockInFee { get; set; }
        public decimal? commitmentPercent { get; set; }
        public decimal? commitmentAmount { get; set; }
        public decimal? refinancingFee { get; set; }
        public string floridaOtherFeeTo1 { get; set; }
        public decimal? floridaOtherFee1 { get; set; }
        public string floridaOtherFeeTo2 { get; set; }
        public string termsChange { get; set; }
        public string floridaOtherFeeTo3 { get; set; }
        public decimal? floridaOtherFee2 { get; set; }
        public string floridaOtherFeeTo4 { get; set; }
        public string methodDetermine { get; set; }
        public string methodDescription { get; set; }
        public int? daysBeforeClosing { get; set; }
        public decimal? commitmentFee { get; set; }
        public bool? refundableIndicator { get; set; }
        public List<NewYorkFee> newYorkFees { get; set; }
        public bool? selectPrimaryLenderIndicator { get; set; }
        public bool? selectPrivateLenderIndicator { get; set; }
        public bool? selectDivisionFeesIndicator { get; set; }
        public string creditIsUsedForReason { get; set; }
        public bool? basedOnOthersIndicator { get; set; }
        public string basedOnOthersDescription { get; set; }
        public bool? estimatedChargeShownOnGFEIndicator { get; set; }
        public bool? printMDDeliveryIndicator { get; set; }
        public string scheduleOfChargesEstimatedFinalIndicator { get; set; }
        public bool? borrowerElectsEstablishEscrowIndicator { get; set; }
        public decimal? borrowerElectsEstablishEscrowAmount { get; set; }
        public int? advFeeAgmtInEfctNumDay { get; set; }
        public string aZCmplBlankSpcsDoc1Nm { get; set; }
        public string aZCmplBlankSpcsDoc1BlankFldDesc1 { get; set; }
        public string aZCmplBlankSpcsDoc2Nm { get; set; }
        public string aZCmplBlankSpcsDoc1BlankFldDesc2 { get; set; }
        public string aZCmplBlankSpcsDoc3Nm { get; set; }
        public string aZCmplBlankSpcsDoc1BlankFldDesc3 { get; set; }
        public string brokerAuthorizedSigningRepName { get; set; }
        public string brokerAuthorizedSigningRepTitle { get; set; }
        public bool? originationFeeChargedIndicator { get; set; }
        public decimal? originationFeeChargedAmount { get; set; }
        public string originationFeePaidBy { get; set; }
        public string originationFeeInterestRateImpactedStatus { get; set; }
        public decimal? originationFeeDecreasesRate { get; set; }
        public decimal? originationFeeIncreasesRate { get; set; }
        public bool? ySPChargedIndicator { get; set; }
        public decimal? ySPChargedAmount { get; set; }
        public string ySPPaidBy { get; set; }
        public string ySPInterestRateImpactedStatus { get; set; }
        public decimal? ySPDecreasesRate { get; set; }
        public decimal? ySPIncreasesRate { get; set; }
        public bool? transferFeeChargedIndicator { get; set; }
        public decimal? transferFeeChargedAmount { get; set; }
        public string transferFeePaidBy { get; set; }
        public bool? servicingFeeChargedIndicator { get; set; }
        public decimal? servicingFeeChargedAmount { get; set; }
        public string servicingFeePaidBy { get; set; }
        public string servicingFeePaidFrequence { get; set; }
        public string furtherFeesEarnedByMortgageBroker { get; set; }
        public bool? rateLockHonoredIndicator { get; set; }
        public bool? loanTermsFixedThroughDateofLoanClosingIndicator { get; set; }
        public string scRegulatoryAgencyType { get; set; }
        public bool? ksUcccElectionIndicator { get; set; }
        public bool? txVeteransLandBoardIndicator { get; set; }
        public bool? kyHomeSolicationLoanIndicator { get; set; }
        public string disclosureDeliveredBy { get; set; }
        public string disclosureDeliveredByOtherMethod { get; set; }
        public DateTime? disclosureDeliveredDate { get; set; }
        public string areas { get; set; }
        public bool? printInterestRateReductionRider { get; set; }
        public bool? printCertificationOfCosts { get; set; }
        public decimal? federallySubsidizedAmountPercentage { get; set; }
        public decimal? federallySubsidizedAmount { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationOwnersTitleInsurance { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationSurvey { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationRealEstateCommission { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationAssessments { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationRepairsImprovements { get; set; }
        public string taxExemptAcquisitionCostCertificationOther { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationOtherAmount { get; set; }
        public decimal? taxExemptAcquisitionCostCertificationTotalAdjustments { get; set; }
        public decimal? originalAcquisitionCost { get; set; }
        public decimal? amendedAcquisitionCost { get; set; }
        public DateTime? leaseAgreementDate { get; set; }
        public string lessorName { get; set; }
        public string id { get; set; }

    }
}